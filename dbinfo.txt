table|sqlite_sequence|sqlite_sequence|4|CREATE TABLE sqlite_sequence(name,seq)
table|Administrator|Administrator|2|CREATE TABLE Administrator (id integer primary key autoincrement, name text unique not null, password text not null)
index|sqlite_autoindex_Administrator_1|Administrator|3|
table|User|User|5|CREATE TABLE User (id integer primary key autoincrement, name text unique not null, password text not null, creator boolean default 0)
index|sqlite_autoindex_User_1|User|6|
table|Playlist|Playlist|9|CREATE TABLE Playlist (id integer primary key autoincrement,
 name text not null, 
 user_id integer not null,
 foreign key (user_id) references User(id))
table|Song_Playlist|Song_Playlist|10|CREATE TABLE Song_Playlist (playlist_id integer,
 song_id integer,
 primary key (playlist_id, song_id),
 foreign key (playlist_id) references Playlist(id),
 foreign key (song_id) references Song(id))
index|sqlite_autoindex_Song_Playlist_1|Song_Playlist|11|
table|Album|Album|8|CREATE TABLE Album (id integer primary key autoincrement,
  name text unique not null,
  genre text default "Unknown",
  singer text not null,
  creator_id integer not null,
  foreign key (creator_id) references User(id))
index|sqlite_autoindex_Album_1|Album|12|
table|Song|Song|7|CREATE TABLE Song (id integer primary key autoincrement,
 name text unique not null,
 genre text default "Unknown",
 singer text not null,
 release_date text,
 lyrics text not null,
 path text not null,
 album_id integer,
 creator_id integer not null, n_rating integer default 0, rating real default 0.0 check(rating >= 0 and rating <= 5),
 foreign key (album_id) references Album(id),
 foreign key (creator_id) references User(id))
index|sqlite_autoindex_Song_1|Song|13|
